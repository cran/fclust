// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// F_gkb
arma::cube F_gkb(arma::mat data, arma::mat U, arma::mat H, arma::mat F0, double m, double gam, unsigned int n, unsigned int k, int p, double mcn, arma::vec vp);
RcppExport SEXP _fclust_F_gkb(SEXP dataSEXP, SEXP USEXP, SEXP HSEXP, SEXP F0SEXP, SEXP mSEXP, SEXP gamSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP mcnSEXP, SEXP vpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type F0(F0SEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    rcpp_result_gen = Rcpp::wrap(F_gkb(data, U, H, F0, m, gam, n, k, p, mcn, vp));
    return rcpp_result_gen;
END_RCPP
}
// F_gkb_ent
arma::cube F_gkb_ent(arma::mat data, arma::mat U, arma::mat H, arma::mat F0, double gam, unsigned int n, unsigned int k, int p, double mcn, arma::vec vp);
RcppExport SEXP _fclust_F_gkb_ent(SEXP dataSEXP, SEXP USEXP, SEXP HSEXP, SEXP F0SEXP, SEXP gamSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP mcnSEXP, SEXP vpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type F0(F0SEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    rcpp_result_gen = Rcpp::wrap(F_gkb_ent(data, U, H, F0, gam, n, k, p, mcn, vp));
    return rcpp_result_gen;
END_RCPP
}
// F_gk
arma::cube F_gk(arma::mat data, arma::mat U, arma::mat H, double m, unsigned int n, unsigned int k, int p, arma::vec vp);
RcppExport SEXP _fclust_F_gk(SEXP dataSEXP, SEXP USEXP, SEXP HSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP vpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    rcpp_result_gen = Rcpp::wrap(F_gk(data, U, H, m, n, k, p, vp));
    return rcpp_result_gen;
END_RCPP
}
// F_gk_ent
arma::cube F_gk_ent(arma::mat data, arma::mat U, arma::mat H, unsigned int n, unsigned int k, int p, arma::vec vp);
RcppExport SEXP _fclust_F_gk_ent(SEXP dataSEXP, SEXP USEXP, SEXP HSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP vpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    rcpp_result_gen = Rcpp::wrap(F_gk_ent(data, U, H, n, k, p, vp));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM
List mainFKM(arma::mat data, double m, unsigned int n, unsigned int p, unsigned int k, unsigned int rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM(SEXP dataSEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM(data, m, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_U
List mainFKM_U(arma::mat data, double m, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_U(SEXP dataSEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_U(data, m, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_ent
List mainFKM_ent(arma::mat data, double ent, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_ent(SEXP dataSEXP, SEXP entSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_ent(data, ent, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_ent_U
List mainFKM_ent_U(arma::mat data, double ent, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_ent_U(SEXP dataSEXP, SEXP entSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_ent_U(data, ent, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_noise
List mainFKM_noise(arma::mat data, double m, double delta, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_noise(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_noise(data, m, delta, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_noise_U
List mainFKM_noise_U(arma::mat data, double m, double delta, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_noise_U(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_noise_U(data, m, delta, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_pf
List mainFKM_pf(arma::mat data, double b, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_pf(SEXP dataSEXP, SEXP bSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_pf(data, b, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_pf_U
List mainFKM_pf_U(arma::mat data, double b, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_pf_U(SEXP dataSEXP, SEXP bSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_pf_U(data, b, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_ent_noise
List mainFKM_ent_noise(arma::mat data, double ent, double delta, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_ent_noise(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_ent_noise(data, ent, delta, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_ent_noise_U
List mainFKM_ent_noise_U(arma::mat data, double ent, double delta, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_ent_noise_U(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_ent_noise_U(data, ent, delta, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_pf_noise
List mainFKM_pf_noise(arma::mat data, double b, double delta, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_pf_noise(SEXP dataSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_pf_noise(data, b, delta, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_pf_noise_U
List mainFKM_pf_noise_U(arma::mat data, double b, double delta, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_pf_noise_U(SEXP dataSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_pf_noise_U(data, b, delta, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb
List mainFKM_gkb(arma::mat data, double m, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb(SEXP dataSEXP, SEXP mSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb(data, m, gam, mcn, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_U
List mainFKM_gkb_U(arma::mat data, double m, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_U(SEXP dataSEXP, SEXP mSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_U(data, m, gam, mcn, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_ent
List mainFKM_gkb_ent(arma::mat data, double ent, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_ent(SEXP dataSEXP, SEXP entSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_ent(data, ent, gam, mcn, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_ent_U
List mainFKM_gkb_ent_U(arma::mat data, double gam, double mcn, double ent, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_ent_U(SEXP dataSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP entSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_ent_U(data, gam, mcn, ent, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_noise
List mainFKM_gkb_noise(arma::mat data, double m, double delta, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_noise(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_noise(data, m, delta, gam, mcn, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_noise_U
List mainFKM_gkb_noise_U(arma::mat data, double m, double gam, double mcn, double delta, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_noise_U(SEXP dataSEXP, SEXP mSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP deltaSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_noise_U(data, m, gam, mcn, delta, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_ent_noise
List mainFKM_gkb_ent_noise(arma::mat data, double ent, double delta, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_ent_noise(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_ent_noise(data, ent, delta, gam, mcn, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gkb_ent_noise_U
List mainFKM_gkb_ent_noise_U(arma::mat data, double ent, double delta, double gam, double mcn, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gkb_ent_noise_U(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP gamSEXP, SEXP mcnSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type mcn(mcnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gkb_ent_noise_U(data, ent, delta, gam, mcn, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk
List mainFKM_gk(arma::mat data, double m, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk(SEXP dataSEXP, SEXP mSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk(data, m, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_U
List mainFKM_gk_U(arma::mat data, double m, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_U(SEXP dataSEXP, SEXP mSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_U(data, m, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_ent
List mainFKM_gk_ent(arma::mat data, double ent, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_ent(SEXP dataSEXP, SEXP entSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_ent(data, ent, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_ent_U
List mainFKM_gk_ent_U(arma::mat data, double ent, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_ent_U(SEXP dataSEXP, SEXP entSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_ent_U(data, ent, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_noise
List mainFKM_gk_noise(arma::mat data, double m, double delta, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_noise(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_noise(data, m, delta, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_noise_U
List mainFKM_gk_noise_U(arma::mat data, double m, double delta, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_noise_U(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_noise_U(data, m, delta, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_ent_noise
List mainFKM_gk_ent_noise(arma::mat data, double ent, double delta, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_ent_noise(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_ent_noise(data, ent, delta, vp, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_gk_ent_noise_U
List mainFKM_gk_ent_noise_U(arma::mat data, double ent, double delta, arma::vec vp, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_gk_ent_noise_U(SEXP dataSEXP, SEXP entSEXP, SEXP deltaSEXP, SEXP vpSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_gk_ent_noise_U(data, ent, delta, vp, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_med
List mainFKM_med(arma::mat data, double m, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_med(SEXP dataSEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_med(data, m, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_med_U
List mainFKM_med_U(arma::mat data, double m, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_med_U(SEXP dataSEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_med_U(data, m, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_med_noise
List mainFKM_med_noise(arma::mat data, double m, double delta, unsigned int n, unsigned int p, unsigned int k, unsigned rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_med_noise(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_med_noise(data, m, delta, n, p, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainFKM_med_noise_U
List mainFKM_med_noise_U(arma::mat data, double m, double delta, unsigned int n, unsigned int p, unsigned int k, arma::mat U, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainFKM_med_noise_U(SEXP dataSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP, SEXP USEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainFKM_med_noise_U(data, m, delta, n, p, k, U, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainnefrc
List mainnefrc(arma::mat D, double m, unsigned int n, unsigned int k, unsigned int rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainnefrc(SEXP DSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainnefrc(D, m, n, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainnefrc_U
List mainnefrc_U(arma::mat D, arma::mat U, double m, unsigned int n, unsigned int k, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainnefrc_U(SEXP DSEXP, SEXP USEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainnefrc_U(D, U, m, n, k, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainrnefrc
List mainrnefrc(arma::mat D, double m, double delta, unsigned int n, unsigned int k, unsigned int rs, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainrnefrc(SEXP DSEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP kSEXP, SEXP rsSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainrnefrc(D, m, delta, n, k, rs, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// mainrnefrc_U
List mainrnefrc_U(arma::mat D, arma::mat U, double m, double delta, unsigned int n, unsigned int k, double conv, unsigned int maxit, std::string index, double alpha);
RcppExport SEXP _fclust_mainrnefrc_U(SEXP DSEXP, SEXP USEXP, SEXP mSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP kSEXP, SEXP convSEXP, SEXP maxitSEXP, SEXP indexSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(mainrnefrc_U(D, U, m, delta, n, k, conv, maxit, index, alpha));
    return rcpp_result_gen;
END_RCPP
}
// centroids_FKM
arma::mat centroids_FKM(arma::mat data, arma::mat U, unsigned int n, unsigned int k, unsigned int p, double m);
RcppExport SEXP _fclust_centroids_FKM(SEXP dataSEXP, SEXP USEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(centroids_FKM(data, U, n, k, p, m));
    return rcpp_result_gen;
END_RCPP
}
// centroids_FKM_ent
arma::mat centroids_FKM_ent(arma::mat data, arma::mat U, unsigned int n, unsigned int k, unsigned int p);
RcppExport SEXP _fclust_centroids_FKM_ent(SEXP dataSEXP, SEXP USEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(centroids_FKM_ent(data, U, n, k, p));
    return rcpp_result_gen;
END_RCPP
}
// centroids_FKM_pf
arma::mat centroids_FKM_pf(arma::mat data, arma::mat U, unsigned int n, unsigned int k, unsigned int p, double b);
RcppExport SEXP _fclust_centroids_FKM_pf(SEXP dataSEXP, SEXP USEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(centroids_FKM_pf(data, U, n, k, p, b));
    return rcpp_result_gen;
END_RCPP
}
// medoids_FKM
List medoids_FKM(arma::mat data, arma::mat U, unsigned int n, unsigned int k, unsigned int p, double m);
RcppExport SEXP _fclust_medoids_FKM(SEXP dataSEXP, SEXP USEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(medoids_FKM(data, U, n, k, p, m));
    return rcpp_result_gen;
END_RCPP
}
// euclidean_distance
arma::mat euclidean_distance(arma::mat data, arma::mat H, unsigned int n, unsigned int k, bool Square);
RcppExport SEXP _fclust_euclidean_distance(SEXP dataSEXP, SEXP HSEXP, SEXP nSEXP, SEXP kSEXP, SEXP SquareSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< bool >::type Square(SquareSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_distance(data, H, n, k, Square));
    return rcpp_result_gen;
END_RCPP
}
// euclidean_distance_gkb
arma::mat euclidean_distance_gkb(arma::mat data, arma::mat H, arma::cube F, unsigned int n, unsigned int k, bool Square);
RcppExport SEXP _fclust_euclidean_distance_gkb(SEXP dataSEXP, SEXP HSEXP, SEXP FSEXP, SEXP nSEXP, SEXP kSEXP, SEXP SquareSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type F(FSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< bool >::type Square(SquareSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_distance_gkb(data, H, F, n, k, Square));
    return rcpp_result_gen;
END_RCPP
}
// euclidean_distance_gk
arma::mat euclidean_distance_gk(arma::mat data, arma::mat H, arma::cube F, arma::mat D_old, unsigned int n, unsigned int k, unsigned int p, bool Square);
RcppExport SEXP _fclust_euclidean_distance_gk(SEXP dataSEXP, SEXP HSEXP, SEXP FSEXP, SEXP D_oldSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP SquareSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type F(FSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D_old(D_oldSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< bool >::type Square(SquareSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_distance_gk(data, H, F, D_old, n, k, p, Square));
    return rcpp_result_gen;
END_RCPP
}
// euclidean_distance_medoid
arma::mat euclidean_distance_medoid(arma::mat data, arma::mat H, unsigned int n, unsigned int k, bool Square);
RcppExport SEXP _fclust_euclidean_distance_medoid(SEXP dataSEXP, SEXP HSEXP, SEXP nSEXP, SEXP kSEXP, SEXP SquareSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< bool >::type Square(SquareSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_distance_medoid(data, H, n, k, Square));
    return rcpp_result_gen;
END_RCPP
}
// replace
arma::rowvec replace(arma::rowvec x, double val, double change);
RcppExport SEXP _fclust_replace(SEXP xSEXP, SEXP valSEXP, SEXP changeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type val(valSEXP);
    Rcpp::traits::input_parameter< double >::type change(changeSEXP);
    rcpp_result_gen = Rcpp::wrap(replace(x, val, change));
    return rcpp_result_gen;
END_RCPP
}
// InvCheck
arma::mat InvCheck(arma::mat A);
RcppExport SEXP _fclust_InvCheck(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(InvCheck(A));
    return rcpp_result_gen;
END_RCPP
}
// Match
bool Match(int i, arma::uvec B);
RcppExport SEXP _fclust_Match(SEXP iSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(Match(i, B));
    return rcpp_result_gen;
END_RCPP
}
// distCheck
void distCheck(NumericMatrix D, int n, int p);
RcppExport SEXP _fclust_distCheck(SEXP DSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    distCheck(D, n, p);
    return R_NilValue;
END_RCPP
}
// silhouette_internal
double silhouette_internal(arma::mat X, arma::mat U, unsigned int p, int k, int n, bool distance);
RcppExport SEXP _fclust_silhouette_internal(SEXP XSEXP, SEXP USEXP, SEXP pSEXP, SEXP kSEXP, SEXP nSEXP, SEXP distanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type distance(distanceSEXP);
    rcpp_result_gen = Rcpp::wrap(silhouette_internal(X, U, p, k, n, distance));
    return rcpp_result_gen;
END_RCPP
}
// silhouette
List silhouette(arma::mat X, arma::mat U, unsigned int p, int k, int n, bool distance);
RcppExport SEXP _fclust_silhouette(SEXP XSEXP, SEXP USEXP, SEXP pSEXP, SEXP kSEXP, SEXP nSEXP, SEXP distanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type distance(distanceSEXP);
    rcpp_result_gen = Rcpp::wrap(silhouette(X, U, p, k, n, distance));
    return rcpp_result_gen;
END_RCPP
}
// silhouetteFuzzy
double silhouetteFuzzy(arma::mat X, arma::mat U, double alpha, unsigned int p, int k, int n, bool distance);
RcppExport SEXP _fclust_silhouetteFuzzy(SEXP XSEXP, SEXP USEXP, SEXP alphaSEXP, SEXP pSEXP, SEXP kSEXP, SEXP nSEXP, SEXP distanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type distance(distanceSEXP);
    rcpp_result_gen = Rcpp::wrap(silhouetteFuzzy(X, U, alpha, p, k, n, distance));
    return rcpp_result_gen;
END_RCPP
}
// partCoef
double partCoef(arma::mat U, unsigned int n);
RcppExport SEXP _fclust_partCoef(SEXP USEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(partCoef(U, n));
    return rcpp_result_gen;
END_RCPP
}
// partEntropy
double partEntropy(arma::mat U, double b, unsigned int n);
RcppExport SEXP _fclust_partEntropy(SEXP USEXP, SEXP bSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(partEntropy(U, b, n));
    return rcpp_result_gen;
END_RCPP
}
// partCoef_mod
double partCoef_mod(arma::mat U, unsigned int n, unsigned int k);
RcppExport SEXP _fclust_partCoef_mod(SEXP USEXP, SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(partCoef_mod(U, n, k));
    return rcpp_result_gen;
END_RCPP
}
// xie_beni
double xie_beni(arma::mat X, arma::mat U, arma::mat H, double m, unsigned int n, int k);
RcppExport SEXP _fclust_xie_beni(SEXP XSEXP, SEXP USEXP, SEXP HSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(xie_beni(X, U, H, m, n, k));
    return rcpp_result_gen;
END_RCPP
}
// indices
double indices(std::string type, arma::mat X, arma::mat U, arma::mat H, double m, unsigned int n, unsigned int k, unsigned int p, double b, double alpha, bool distance);
RcppExport SEXP _fclust_indices(SEXP typeSEXP, SEXP XSEXP, SEXP USEXP, SEXP HSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP distanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type distance(distanceSEXP);
    rcpp_result_gen = Rcpp::wrap(indices(type, X, U, H, m, n, k, p, b, alpha, distance));
    return rcpp_result_gen;
END_RCPP
}
// unifInit
arma::mat unifInit(int n, int d);
RcppExport SEXP _fclust_unifInit(SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(unifInit(n, d));
    return rcpp_result_gen;
END_RCPP
}
// memb_degree
arma::mat memb_degree(arma::mat D, double m, unsigned int n, unsigned int k, unsigned int p);
RcppExport SEXP _fclust_memb_degree(SEXP DSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(memb_degree(D, m, n, k, p));
    return rcpp_result_gen;
END_RCPP
}
// memb_degree_pf
arma::mat memb_degree_pf(arma::mat D, double b, unsigned int n, unsigned int k, unsigned int p);
RcppExport SEXP _fclust_memb_degree_pf(SEXP DSEXP, SEXP bSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(memb_degree_pf(D, b, n, k, p));
    return rcpp_result_gen;
END_RCPP
}
// memb_degree_ent
arma::mat memb_degree_ent(arma::mat D, double ent, unsigned int n, unsigned int k, unsigned int p);
RcppExport SEXP _fclust_memb_degree_ent(SEXP DSEXP, SEXP entSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type ent(entSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(memb_degree_ent(D, ent, n, k, p));
    return rcpp_result_gen;
END_RCPP
}
// memb_degree_medoid
arma::mat memb_degree_medoid(arma::mat D, arma::uvec medoid, double m, unsigned int n, unsigned int k, unsigned int p);
RcppExport SEXP _fclust_memb_degree_medoid(SEXP DSEXP, SEXP medoidSEXP, SEXP mSEXP, SEXP nSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type medoid(medoidSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(memb_degree_medoid(D, medoid, m, n, k, p));
    return rcpp_result_gen;
END_RCPP
}
// partition_comp
List partition_comp(arma::mat HardClust, arma::mat Fuzzy, std::string t_norm);
RcppExport SEXP _fclust_partition_comp(SEXP HardClustSEXP, SEXP FuzzySEXP, SEXP t_normSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type HardClust(HardClustSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Fuzzy(FuzzySEXP);
    Rcpp::traits::input_parameter< std::string >::type t_norm(t_normSEXP);
    rcpp_result_gen = Rcpp::wrap(partition_comp(HardClust, Fuzzy, t_norm));
    return rcpp_result_gen;
END_RCPP
}
